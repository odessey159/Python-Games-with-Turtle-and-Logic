import random

print("Welcome to Tom's puzzle game. In this game, you'll be challenged to solve a sliding puzzle by rearranging the numbered tiles. Are you ready?")


puzzle = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
spacex = 2
spacey = 2
commajudge = 0
# Judge if the player has solve the puzzle
def ifwin():
    for i in range(0, 3):
        for j in range(0, 3):
            if puzzle[i][j] != i * 3 + j + 1:
                return 0
    return 1
# Put out the puzzle
def outputpuzzle():
    for i in range(0, 3):
        for j in range(0, 3):
            if puzzle[i][j] != 9:
                print(puzzle[i][j], end=" ")
            else:
                print(" ", end=" ")
        print("")
# Judge if there need a comma in the sentence
def commaoutputjudge():
    global commajudge
    if commajudge == 1:
        print(",", end=" ")
    else:
        commajudge = 1
# In the case that the player input wrong letters when chosing directions
def inputerror():
    print("Ops! Wrong input.Please try again")
    slidingPuzzle()
# Genarate a puzzle in disorder
def puzzlegenerating():
    global spacex, spacey
    spacex = 2
    spacey = 2
    # Generate a puzzle in order
    for i in range(0, 3):
        for j in range(0, 3):
            puzzle[i][j] = i * 3 + j + 1
    # Perform a series of random valid moves to shuffle the puzzle. Tthe puzzle generated by this way must be solvable
    for i in range(0, 1000):
        randommovement = random.randint(1, 4)
        if randommovement == 1 and spacex != 0:
            puzzle[spacex][spacey], puzzle[spacex - 1][spacey] = puzzle[spacex - 1][spacey], puzzle[spacex][spacey]
            spacex -= 1
        if randommovement == 2 and spacex != 2:
            puzzle[spacex][spacey], puzzle[spacex + 1][spacey] = puzzle[spacex + 1][spacey], puzzle[spacex][spacey]
            spacex += 1
        if randommovement == 3 and spacey != 0:
            puzzle[spacex][spacey], puzzle[spacex][spacey - 1] = puzzle[spacex][spacey - 1], puzzle[spacex][spacey]
            spacey -= 1
        if randommovement == 4 and spacey != 2:
            puzzle[spacex][spacey], puzzle[spacex][spacey + 1] = puzzle[spacex][spacey + 1], puzzle[spacex][spacey]
            spacey += 1
# Start one game
def slidingPuzzle():
    global spacex, spacey, commajudge
    amountjudge = 0
    movenumber = 0
    commajudge = 0
    movement = [0] * 60
    rawoperation = input("Enter the four letters used for left, right, up and down move> ")
    # Storage the letters on behalf of the direction of move
    for i in range(0, len(rawoperation)):
        if rawoperation[i] != " ":
            amountjudge += 1
            movement[amountjudge] = rawoperation[i]
        if amountjudge > 4:
            inputerror()
            return
    # Judge if there is something wrong when putting in
    if amountjudge != 4:
        inputerror()
        return
    for i in range(1, 4):
        for j in range(i + 1, 5):
            if movement[i] == movement[j]:
                inputerror()
                return
    puzzlegenerating()
    while True:
        outputpuzzle()
        print("Enter your move(", end="")
        commajudge = 0
        movejudge = [0] * 5
        # Judge if the tile can move in that way
        if spacey != 2:
            commaoutputjudge()
            print("left-" + movement[1], end="")
            movejudge[1] = 1
        if spacey != 0:
            commaoutputjudge()
            print("right-" + movement[2], end="")
            movejudge[2] = 1
        if spacex != 2:
            commaoutputjudge()
            print("up-" + movement[3], end="")
            movejudge[3] = 1
        if spacex != 0:
            commaoutputjudge()
            print("down-" + movement[4], end="")
            movejudge[4] = 1
        print(")>", end=" ")
        inputmovement = input()
        # Apply the movement
        if inputmovement == movement[4] and spacex != 0:
            puzzle[spacex][spacey], puzzle[spacex - 1][spacey] = puzzle[spacex - 1][spacey], puzzle[spacex][spacey]
            spacex -= 1
        elif inputmovement == movement[3] and spacex != 2:
            puzzle[spacex][spacey], puzzle[spacex + 1][spacey] = puzzle[spacex + 1][spacey], puzzle[spacex][spacey]
            spacex += 1
        elif inputmovement == movement[2] and spacey != 0:
            puzzle[spacex][spacey], puzzle[spacex][spacey - 1] = puzzle[spacex][spacey - 1], puzzle[spacex][spacey]
            spacey -= 1
        elif inputmovement == movement[1] and spacey != 2:
            puzzle[spacex][spacey], puzzle[spacex][spacey + 1] = puzzle[spacex][spacey + 1], puzzle[spacex][spacey]
            spacey += 1
        else:
            print("Ops! Wrong input. Can't move in that way")
            continue
        # Track the number of moves
        movenumber += 1
        if ifwin() == 1:
            outputpuzzle()
            print("Congratulations! You solved the puzzle in " + str(movenumber) + " moves")
            gamejudge = input("Enter n for another game, or q to end the game>")
            if gamejudge == "n":
                slidingPuzzle()
            elif gamejudge == "q":
                return

slidingPuzzle()
